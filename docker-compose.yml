services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: prompt-monitor-db
    environment:
      POSTGRES_DB: prompt_monitor
      POSTGRES_USER: prompt_monitor
      POSTGRES_PASSWORD: prompt_monitor_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U prompt_monitor"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: prompt-monitor-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # FastAPI Backend
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: prompt-monitor-backend
    environment:
      - DATABASE_URL=postgresql://prompt_monitor:prompt_monitor_password@postgres:5432/prompt_monitor
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - ./server:/app
      - /app/__pycache__
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: prompt-monitor-frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules
    restart: unless-stopped

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: prompt-monitor-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
